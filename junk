# Function to get installed applications from a specific registry path
function Get-InstalledAppsFromRegistryPath {
    param (
        [string]$RegistryPath,
        [string]$Source
    )

    $apps = @()
    if (Test-Path $RegistryPath) {
        $keys = Get-ChildItem -Path $RegistryPath
        foreach ($key in $keys) {
            $app = Get-ItemProperty -Path $key.PSPath
            $apps += [PSCustomObject]@{
                Name = $app.DisplayName
                Version = $app.DisplayVersion
                Publisher = $app.Publisher
                InstallDate = $app.InstallDate
                User = $RegistryPath -replace 'HKEY_USERS\\', '' -replace '\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall', ''
                Source = $Source
            }
        }
    }
    return $apps
}

# Function to translate SID to username
function Get-UsernameFromSID {
    param (
        [string]$SID
    )

    try {
        $user = New-Object System.Security.Principal.SecurityIdentifier($SID)
        $user.Translate([System.Security.Principal.NTAccount]).Value
    } catch {
        $SID
    }
}

# Main script
$allApps = @()

if (!(Get-PSDrive | ? {$_.Name -eq 'HKU'})) {New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS | Out-Null}
$users = Get-ChildItem -Path "HKU:" | Where-Object { $_.Name -notmatch "_Classes" }

foreach ($user in $users) {
    $userSID = $user.PSChildName
    $userName = Get-UsernameFromSID -SID $userSID
    $uninstallPaths = @(
        @{ Path = "HKU:\$userSID\Software\Microsoft\Windows\CurrentVersion\Uninstall"; Source = "Uninstall" },
        @{ Path = "HKU:\$userSID\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall"; Source = "WOW6432Node" }
    )

    foreach ($pathInfo in $uninstallPaths) {
        $apps = Get-InstalledAppsFromRegistryPath -RegistryPath $pathInfo.Path -Source $pathInfo.Source
        foreach ($app in $apps) {
            $app.User = $userName
        }
        $allApps += $apps
    }
}

# Output the results
$allApps | Format-Table -AutoSize
